{
    "versionNumber": "3.0",
    "versionApprovalDate": "February 1, 2020",
    "versionDate": "March 5, 2020",
    "pageSections": [
    {"sectionId": "section_1_introduction",
     "sectionTitle": "Introduction",
     "sectionParagraphs": ["CVE<sup>®</sup> is a list of information security vulnerabilities and exposures that provides common identifiers for publicly known cybersecurity vulnerabilities. CVE makes it possible to share data across separate vulnerability capabilities (cybersecurity tools, repositories, and services) with this common enumeration. The use of <a href='/ResourcesSupport/FAQs#pc_cve_records_what_is_cve_record'>CVE Records</a> ensures that two or more parties can confidently refer to a <a href='/ResourcesSupport/FAQs#pc_cve_id_requests_what_is_cve_id'>CVE Identifier (CVE ID)</a> when discussing or sharing information about a unique vulnerability. In this way, CVE is fundamental to the vulnerability management infrastructure.",
			   "The CVE Program’s primary challenge is to satisfy the demand for timely, accurate CVE ID assignments and CVE Record publishing, while rapidly expanding the scope of coverage to address the increasing number of vulnerabilities and evolving state of vulnerability management. The CVE Program is overseen by the <a href='/ProgramOrganization/Board'>CVE Board</a> (hereinafter the Board). To address the CVE Program's scalability challenge, the Board determined that the CVE Program must be federated and that CVE Records should be produced both more quickly and in a more decentralized manner."],
     "subSections": [
	 {"subSectionId": "section_1-1_cnas",
	  "subSectionTitle": "CVE Numbering Authorities (CNAs)",
	  "subSectionParagraphs": ["Operating under the authority of the CVE Program, “<a href='/ProgramOrganization/CNAs'>CNAs</a>” are organizations that are authorized to assign CVE IDs to vulnerabilities affecting products within their distinct, agreed upon scope, for inclusion in first-time public announcements of new vulnerabilities. These CVE IDs are provided to researchers, vulnerability discoverers or reporters, and information technology vendors. Participation in this program is voluntary, and the benefits of participation include the ability to publicly disclose a vulnerability with an already assigned CVE ID, the ability to control the disclosure of vulnerability information without pre-publishing, and notification of vulnerabilities in products within a CNA’s scope by researchers who request a CVE ID from them."],
	  "subSubSections": []
	 },
	 {"subSectionId": "section_1-2_cna_program_structure",
          "subSectionTitle": "CNA Program Structure",
          "subSectionParagraphs": ["As the CNA Program has evolved and the number of CNAs has increased, it has become necessary to categorize CNAs into the four following categories:</p><ol><li>Sub-CNA</li><li>Root</li><li>Top-Level Root</li><li>CNA of Last Resort (CNA-LR)</li></ol><p><strong>Sub-CNAs</strong> are the most common and basic level of CNA. Each Sub-CNA assigns CVE IDs for vulnerabilities in their own products or their domain of responsibility, hereinafter referred to as scope, and submits the vulnerability information to the CVE List when they make the vulnerability public. Sub-CNAs are administered and mentored by Roots.",
				   "<strong>Root</strong> manages a group of Sub-CNAs within a given domain or community, and train and admit new Sub-CNAs, CNA-LRs, and Roots within that domain or community.",
				   "At the top of the CNA hierarchy are the <strong>Top-Level Roots</strong>, which is a special type of Root that oversees their CNA hierarchy.",
				   "Since the Sub-CNAs administered by a Root may not cover all of the vulnerabilities within that Root's scope, each Root is responsible for assigning a <strong>CNA-LR</strong> to fill in the gaps. CNA-LRs also assign CVE IDs, but their scopes cover all vulnerabilities for their Root that are not already covered by one of its Sub-CNAs.",
				   "Finally, while not a type of CNA, the <strong>Secretariat</strong> role supports many of the CNA functions (such as providing infrastructure and publishing the CVE List) and therefore is included in this document.",
				   "Each of the different types of CNAs, and the Secretariat, are roles that can be fulfilled by any organization that meets the requirements. These roles are not mutually exclusive, and a single organization can fulfill more than one of these roles at the same time. For example, the organization that operates a Root may also choose to act as the CNA-LR for its scope.",
				   "<div style='float:middle; width:100%; font-size:100%; vertical-align:top; padding-top:10px; padding-left:0px; padding-bottom:5px;'><div style='margin: auto; text-align: center'><img src='/images/CNARules_Federated_CNA_Structure.png' width='656' height='525' alt='Figure 1. Federated CNA Structure'/><p style='font-size: .75em; padding: .8em auto'>Figure 1. Federated CNA Structure</p></div></div><br>",
				   "Figure 1 shows that different Roots have different areas of responsibility; each colored box depicts a distinct scope. A portion of the gray box in the center of the figure is shaded yellow to indicate that part of that scope has been delegated to a particular Root and its Sub-CNAs.",
				   "In cases where requests or issues cannot be resolved by a given CNA, the issues are escalated to the next higher-level Root. Examples of such issues would be a CNA being unresponsive beyond expected timeframes or a disagreement with a CNA over whether or not an issue is a vulnerability. Requests and issues at the Sub-CNA level can be elevated to Roots, and requests and issues at the Roots can be elevated to the Top-Level Root. A Top-Level Root has the right to require remediation or impose sanctions on CNAs (of any type) that do not comply with the CNA Rules; however, Roots are the main enforcement mechanism. Roots are responsible for enforcing the rules within their area of responsibility; the Top-Level Root is the enforcement mechanism of last resort. The Roots have the same level of enforcement ability as the Top-Level Root, including remediation or sanctions, within their areas of responsibility, which enables the federation of the CVE Program by implementing a de-centralized governance approach.",
				   "Examples of remediation and sanctions include, but are not limited, to:<ul><li>The development of training, guidance, or implementation materials for use by the CNAs;</li><li>Retraining of CNA staff;</li><li>Additional process documentation and reporting from a CNA;</li><li>Reduction of the number of CVE IDs a CNA has available to assign at a time;</li><li>Rejection of CVE Record submissions; and</li><li>Revocation of CNA status.</li></ul>",
				   "The same flow, from Sub-CNAs to Roots to the Top-Level Root, is followed to alert the next higher CNA when CVEs are assigned, or when reporting other programmatic data (see Figure 2, below). If the Root agrees, the Sub-CNA can go directly to the Top-Level root while keeping the Root in the loop. The Secretariat provides CVE IDs to Roots, and Roots provide blocks of IDs to Sub-CNAs. If the Root agrees, the Sub-CNAs can go to the Secretariat for blocks of IDs as well.",
				   "<div style='float:middle; width:100%; font-size:100%; vertical-align:top; padding-top:10px; padding-left:0px; padding-bottom:5px;'><div style='margin: auto;'><img src='/images/CNARules_CNA_CVE_ID_Lifecycle.png' width='840' height='302' alt='Figure 2. CNA CVE ID Lifecycle'/><p style='font-size: .75em; padding: .8em auto'>Figure 2. CNA CVE ID Lifecycle</p></div></div><br>"],
	  "subSubSections": []
	 },
	 {"subSectionId": "section_1-3_purpose",
	  "subSectionTitle": "Purpose and Goal of the CNA Rules",
	  "subSectionParagraphs": [
	      "The purpose of establishing CNA Rules is to maintain consistency in the CVE assignment process and administration of the CNA program across all CNAs.",
	      "The goal of the CNA Rules is to provide the Roots with the maximum flexibility to administer the CNA Program within their respective domains or communities, while also maintaining consistency in the CVE assignment process and administration of the CNA Program.",
	      "The CNA Rules, once adopted, will be reviewed at least annually, and more frequently based on lessons learned, if necessary."
	  ],
	  "subSubSections": []
	 },
	 {"subSectionId": "section_1-4_document_structure",
	  "subSectionTitle": "Document Structure",
	  "subSectionParagraphs": [
	      "This document is broken down into assignment, communication, and administration rules that apply to the Secretariat and all CNAs (including Subs and CNA-LRs) and Roots, as well as those rules specific to Program and Roots."
	  ],
	  "subSubSections": []
	 }
     ]
    },
    {"sectionId": "section_2_sub_cnas",
     "sectionTitle": "Sub-CNAs",
     "sectionParagraphs": ["Sub-CNAs are the foundation of the CVE Program. Sub-CNAs (along with CNA-LRs) are the organizations that assign CVE IDs to vulnerabilities and generate the content for the CVE List. As such, most of the rules for Sub-CNAs revolve around CVE ID requests, assigning CVE IDs, and when and how to update the CVE List."],
     "subSections": [
	 {
	 "subSectionId": "section_2-1_cve_id_management_rules",
	 "subSectionTitle": "CVE ID Management Rules",
          "subSectionParagraphs": [
	      "2.1.1 MUST follow the rules for assigning CVE IDs; see <a href='#section_7_assignment_rules'>Section 7: Assignment Rules</a>.",
	      "2.1.2 If a CVE ID is being assigned to a vulnerability, the CNA MUST make a reasonable effort to notify the maintainer of the code in which that vulnerability exists.",
	      "For example, if an operating system vendor discovers a vulnerability in a library from an upstream supplier, in addition to assigning the CVE ID to the vulnerability, the operating system vendor should attempt to contact the upstream supplier. This will help avoid duplicate CVE ID assignments and ensure that others affected by the vulnerability will be made aware of it.",
	      "2.1.3 When a vulnerability is reported to the CNA and a CVE ID is assigned to that vulnerability, the CNA MUST provide the CVE ID to the reporter.",
	      "This rule does not override any embargo rules established by the CNA.",
	      "2.1.4 Upon request by the Top-Level Root or by the CNA’s Root, a CNA MUST provide a list of unused CVE IDs that have been reserved by the CNA.",
	      "This will typically be done on a yearly basis for the previous year's CVE ID reservations."
	  ],
	 "subSubSections": []
	 },
	 {
	 "subSectionId": "section_2-2_cve_record_management_rules",
	 "subSectionTitle": "CVE Record Management Rules",
          "subSectionParagraphs": [
	      "2.2.1 MUST provide CVE Record information to the Secretariat through the process designated by its parent CNA; see <a href='#section_8_cve_record_requirements'>Section 8: CVE Record Requirements</a> when a vulnerability assigned a CVE ID is made public by the CNA.",
	      "2.2.2 MUST provide CVE Record information that meets the requirements listed in <a href='#section_8_cve_record_requirements'>Section 8: CVE Record Requirements</a>.",
	      "2.2.3 SHOULD provide the CVE Record information within 24 hours of publishing the CVE ID.",
	      "2.2.4 MUST have an established distribution point for in-scope vulnerability disclosures that is freely available to the general public without restrictions. The Sub-CNA’s website MAY require registration but provide accounts for free without restriction to anyone. The Sub-CNA MAY provide additional details with restrictions as long as the information required in the reference is freely available; see <a href='#section_8_cve_record_requirements'>Section 8: CVE Record Requirements</a>.",
	      "2.2.5 MUST provide information about where they will disclose the vulnerabilities to which they assign CVE IDs, such as (but not restricted to), a URL linked to the CNA’s advisories. This information will be made public be the Secretariat as described in <a href='#section_8_cve_record_requirements'>Section 8: CVE Record Requirements</a>."
	  ],
	 "subSubSections": []
	 },
	 {
	 "subSectionId": "section_2-3_cna_record_management_rules",
	 "subSectionTitle": "CNA Record Management Rules",
             "subSectionParagraphs": [
		 "2.3.1 MUST provide Points of Contact (POCs) (e.g., email addresses, URLs, etc.) to the CNA’s Root and the Secretariat. This information will be made public to the Secretariat as stated in <a href='#section_5-2_infrastructure_maintenance_rules'>Section 5.2 Infrastructure Maintenance Rules</a>.",
		 "2.3.2 MUST inform its Root and the Secretariat when its POCs change.",
		 "2.3.3 MUST publish a disclosure (embargo) policy (see Appendix D. <a href='#appendix_d_disclosure_and_embargo_policies'>Appendix D: Disclosure and Embargo Policies</a> for additional information). This information will be made public by the Secretariat according to <a href='#section_5-2_infrastructure_maintenance_rules'>Section 5.2 Infrastructure Maintenance Rules</a>.",
		 "2.3.4 MUST inform its Root and the Secretariat when the CNA’s scope changes.",
		 "2.3.5 MUST obtain its Root's approval before changing scopes.",
		 "2.3.6 CNAs MUST provide a means (e.g., hyperlink, email, form) for the public to contact them regarding vulnerabilities. CNAs can also provide guidelines for how to communicate with them, such as language restrictions (“English-only”, “Japanese or English”, etc.). CNAs MUST provide the list publicly and to all levels above their own."
	  ],
	 "subSubSections": []
	 },
	 {
	 "subSectionId": "section_2-4_administration_rules",
	 "subSectionTitle": "Administration Rules",
             "subSectionParagraphs": [
		 "2.4.1 MUST be responsive to inquiries from all CNAs and document those interactions in some way (archiving email correspondence or tracking via a trouble ticket would be sufficient, for example).",
		 "2.4.2 MUST operate under the CVE Terms of Use; see <a href='#appendix_b_terms_of_use'>Appendix B: Terms of Use</a>.",
		 "2.4.3 MUST provide any documentation required to adjudicate disputes to the higher-level CNA."
	  ],
	 "subSubSections": []
	 }
     ]
    },
    {"sectionId": "section_3_roots",
     "sectionTitle": "Roots",
     "sectionParagraphs": ["Roots are the administrative arm of the CVE Program. Roots can have Sub-CNAs, CNA-LRs, and other Roots reporting to them. Any CNA that reports to a Root is referred to herein as a child or child CNA of that Root (i.e., parent CNA). Roots are responsible for ensuring their CNAs are following the CNA Rules, recruiting new CNAs, providing documentation for the CNAs, and handling issues with its child CNAs."],
     "subSections": [
	 {
	 "subSectionId": "section_3-1_child_cna_management_rules",
	 "subSectionTitle": "Child CNA Management Rules",
             "subSectionParagraphs": [
		 "One of the most important functions of a Root is to manage the CNAs that report to it. Roots are responsible for ensuring that its child CNAs understand the CNA Rules and are following them. Roots ensure that the CVE Program provides its child CNAs with the necessary resources and guidance.",
		 "3.1.1 MUST provide a mechanism for child CNAs to obtain new CVE IDs.",
		 "3.1.2 MUST provide public documentation describing the specific process for submitting CVE assignments and other CVE requests.",
		 "3.1.3 MUST provide documentation on how its child CNAs should resolve issues with overlapping scopes.",
		 "3.1.4 MUST provide documentation on how to obtain new CVE IDs.",
		 "3.1.5 MUST maintain a public listing of the established assignment rules followed by the child CNAs in its domain.",
		 "3.1.6 When appropriate, a Root MUST apply sanctions upon any child CNAs within its scope. The application of sanctions should occur as a last resort.",
		 "3.1.7 MAY sanction any CNA within its scope, regardless of whether the CNA reports to it. For example, if the Root has a child Root, then it can sanction the Sub-CNAs of the child Root if necessary.",
		 "3.1.8 MUST be responsive to its child CNAs."
	  ],
	 "subSubSections": []
	 },
	 {
	 "subSectionId": "section_3-2_cna-lr_management_rules",
	 "subSectionTitle": "CNA-LR Management Rules",
             "subSectionParagraphs": [
		 "To ensure that there is a CNA to assign CVE IDs to all vulnerabilities within the Root's scope, it must designate an organization to act as a CNA-LR. See <a href='#section_4_cna_of_last_resort_cna-lr'>Section 4: CNA of Last Resort (CNA-LR)</a>.",
		 "3.2.1 Roots MUST designate an organization to perform the CNA-LR role for its scope.",
		 "3.2.2 A Root MAY act as the CNA-LR for its scope.",
		 "3.2.3 If a Root does not fulfill the CNA-LR role itself, it MUST designate some other organization for the role.",
		 "3.2.4 The Root MAY designate its parent CNA’s CNA-LR as its own if both its parent CNA and the CNA-LR agree.</p"
	     ],
	 "subSubSections": []
	 },
	 {
	 "subSectionId": "section_3-3_escalated_issues_rules",
	 "subSectionTitle": "Escalated Issues Rules",
             "subSectionParagraphs": [
		 "Parties who contend that a Root's child CNA is not in compliance with the CNA Rules (e.g., not responding in a timely manner, refusing to assign a CVE ID to a vulnerability, not populating a CVE Record in a timely manner, or inappropriately sanctioning a child CNA) may contact the Root about the issue. The Root will then judge whether the report is accurate and take any necessary actions. See <a href='#section_9_appeals_process'>Section 9: Appeals Process</a> for a high-level description of the process.",
		 "3.3.1 MUST act as an escalation and adjudication point for issue resolution for its child CNAs.",
		 "3.3.2 MUST address CVE assignment issues from its child CNAs that require escalation.",
		 "3.3.3 MUST clearly document the dispute in the CVE Record if the Root assigns a CVE ID as the result of an escalated issue.",
		 "3.3.4 MUST provide documentation on how issues with a CNA can be escalated to the Root.",
		 "3.3.5 MUST maintain a public contact method so that issues involving its child CNAs may be escalated.",
		 "3.3.6 Roots MUST be responsive to escalation requests."
	     ],
	 "subSubSections": []
	 },
	 {
	 "subSectionId": "section_3-4_cna_recruitment_rules",
	 "subSectionTitle": "CNA Recruitment Rules",
             "subSectionParagraphs": [
		 "One of the unique responsibilities of a Root is creating new CNAs within its scope. Roots can create Sub-CNAs, CNA-LRs, and even other Roots. When creating a new CNA, the Root ensures that the candidate understands its responsibilities and can fulfill them.",
		 "3.4.1 MUST document and publish its process for creating new CNAs.",
		 "3.4.2 MUST notify the Secretariat and its parent CNA whenever child CNAs are established or removed.",
		 "3.4.3 MUST provide a public contact method to receive requests from candidate CNAs.",
		 "3.4.4 MUST be responsive to requests from candidates to become a CNA.",
		 "3.4.5 MUST ensure that the CNA candidate understands the responsibilities of its new role.",
		 "3.4.6 MUST ensure that the CNA candidate can fulfill the responsibilities of its new role.",
		 "3.4.7 MUST NOT create a new CNA with a scope that overlaps the scope of another CNA.",
		 "3.4.8 MUST NOT create a new CNA that is outside its scope.",
		 "3.4.9 SHOULD attempt to recruit new CNAs."
	     ],
	 "subSubSections": []
	 },
	 {
	 "subSectionId": "section_3-5_administration_rules",
	 "subSectionTitle": "Administration Rules",
             "subSectionParagraphs": [
		 "3.5.1 MUST provide, to the Secretariat, a public list of POCs and web links for each child CNA in the Root's domain.",
		 "3.5.2 MUST maintain and provide, to the Secretariat, a private list of individual POCs within each child CNA for use by CNAs only.",
		 "3.5.3 MUST notify the Secretariat and its parent CNA (if any) when sanctions are applied to a CNA."
	     ],
	 "subSubSections": []
	 }
	 ]
    },
    {"sectionId": "section_4_cna_of_last_resort_cna-lr",
     "sectionTitle": "CNA of Last Resort (CNA-LR)",
     "sectionParagraphs": [
	 "Each Root must designate a CNA-LR, which is similar to a Sub-CNA, but its scope is much broader (i.e., the Root's scope minus the vulnerabilities covered by the Root’s other child CNAs). The major differences between CNA-LRs and Sub-CNAs are their reporting requirements and the lack of control over their scopes, and a heightened need to collaborate with the other CNAs in their parents’ scopes."
     ],
     "subSections": [
	 {
	 "subSectionId": "section_4-1_cve_id_management_rules",
	 "subSectionTitle": "CVE ID Management Rules",
             "subSectionParagraphs": [
		 "4.1.1 MUST apply the assignment rules defined in <a href='#section_7_assignment_rules'>Section 7: Assignment Rules</a>.",
		 "4.1.2 The scope for a CNA-LRs is vulnerabilities within its parent Root's scope that are not covered by another CNA’s scope.",
		 "4.1.3 MUST be responsive to those requesting CVE ID assignments.",
		 "4.1.4 When a vulnerability is reported to the CNA and a CVE ID is assigned to that vulnerability, MUST provide the CVE ID to the reporter.",
		 "4.1.5 Upon request by the Top-Level Root or by the CNA’s parent CNA, MUST provide a list of unused CVE IDs that have been reserved by the CNA. (This will typically be done on a yearly basis for the previous year’s CVE ID reservations.)"
	     ],
	 "subSubSections": []
	 },
	 {
	 "subSectionId": "section_4-2_cve_record_management_rules",
	 "subSectionTitle": "CVE Record Management Rules",
             "subSectionParagraphs": [
		 "4.2.1 When submitting the record information for a CVE ID, MUST follow the requirements in <a href='#section_8_cve_record_requirements'>Section 8: CVE Record Requirements</a>.",
		 "4.2.2 MUST follow the process defined by its Root to submit the record information for the CVE IDs it assigns."
	     ],
	 "subSubSections": []
	 },
	 {
	 "subSectionId": "section_4-3_cna_record_management_rules",
	 "subSectionTitle": "CNA Record Management Rules",
             "subSectionParagraphs": [
		 "4.3.1 MUST provide POCs (e.g., email addresses, URLs, etc.) to all levels above their own (including the Secretariat). This information will be made public be the Secretariat according to <a href='#section_5-2_infrastructure_maintenance_rules'>Section 5.2: Infrastructure Maintenance Rules</a>.",
		 "4.3.2 MUST provide a means (e.g., hyperlink, e-mail) for the public to contact them regarding vulnerabilities. This information will be made public be the Secretariat according to <a href='#section_5-2_infrastructure_maintenance_rules'>Section 5.2: Infrastructure Maintenance Rules</a>."
	     ],
	 "subSubSections": []
	 },
	 {
	 "subSectionId": "section_4-4_administration_rules",
	 "subSectionTitle": "Administration Rules",
         "subSectionParagraphs": [
		 "4.4.1 MUST operate under the CVE Terms of Use; see <a href='#appendix_b_terms_of_use'>Appendix B Terms of Use</a>.",
		 "4.4.2 MUST provide any documentation required to adjudicate disputes to the higher-level CNA.",
		 "4.4.3 MUST be responsive to inquiries from all CNAs and document those interactions in some way (archiving email correspondence or tracking via a trouble ticket would be sufficient, for example)."
	     ],
	 "subSubSections": []
	 }
	 
     ]
    },
    {"sectionId": "section_5_secretariat",
     "sectionTitle": "Secretariat",
     "sectionParagraphs": ["The Secretariat role is not a type of CNA or Root but supports many of the necessary functions for the CNAs to fulfill their responsibilities. The Secretariat maintains the CVE List, maintains the infrastructure used by the CVE Program (e.g., the website and mailing lists), and organizes the CVE Board and CVE Working Group meetings."],
     "subSections": [
	 {"subSectionId": "section_5-1_cve_list_maintenance_rules",
	  "subSectionTitle": "CVE List Maintenance Rules",
	  "subSectionParagraphs": [
	      "The CVE List provides the official mapping of CVE IDs to vulnerabilities. The Secretariat is responsible for collecting this information from the CNAs and publishing it for use by the CVE Community.",
	      "5.1.1 MUST maintain the CVE List and provide that information to the public.",
	      "5.1.2 MUST provide the CVE List to the public free of charge.",
	      "5.1.3 MUST maintain the Terms of Use under which the CVE List is published.",
	      "5.1.4 MUST maintain a process for rejecting unused reserved CVE IDs each year. One example process would be at the beginning of each calendar year, CNAs must indicate to the Secretariat which CVE IDs from the previous calendar year were not assigned to a vulnerability. Those CVE IDs that were unused would be rejected. (CVE IDs for previous calendar years can always be requested if necessary.)",
	      "5.1.5 MUST maintain a process for rejecting assigned-but-unpopulated CVE Records based on an expiration period. For example, that period may be “if a CVE ID was assigned two years ago but the record for it was not populated by the assigner, the CVE ID will be rejected”. The specific time frame should be publicly documented by the Top-Level Roots and can be updated based on the needs of the CVE community.",
	      "5.1.6 MUST maintain the CVE ID syntax (e.g., CVE dash year dash arbitrary number of digits)."],
	  "subSubSections": []
	 },
	 {"subSectionId": "section_5-2_infrastructure_maintenance_rules",
	  "subSectionTitle": "Infrastructure Maintenance Rules",
	  "subSectionParagraphs": [
	      "The Secretariat maintains the infrastructure to ensure the smooth assignment of CVE IDs and publication of CVE Record information.",
	      "5.2.1 MUST provide a mechanism for CNAs to obtain CVE IDs for assignment.",
	      "5.2.2 MUST document and publish how to obtain CVE IDs.",
	      "5.2.3 MUST provide any necessary permissions to the infrastructure.",
	      "5.2.4 MUST provide a listing of all Roots and Sub-CNAs, including public points of contact and web links. The Secretariat obtains this information from Roots.",
	      "5.2.5 MUST maintain a private list of individual POCs for each Root and Sub-CNA for use by CNAs only.",
	      "5.2.6 MUST provide coordination of communication channels between Roots.",
	      "5.2.7 MUST maintain a public listing of the established counting rules for the CVE Program, see <a href='#section_7_assignment_rules'>Section 7: Assignment Rules</a>.",
	      "5.2.8 MUST provide a mechanism through which CNAs can provide CVE Record information to the CVE List.",
	      "5.2.9 MUST serve as a member, and the Board Moderator, of the Board."
	  ],
	  "subSubSections": []
	 },
	 {"subSectionId": "section_5-3_administration_rules",
	  "subSectionTitle": "Administration Rules",
	  "subSectionParagraphs": [
	      "5.3.1 MUST accept metrics reports from Roots quarterly, within one month of the calendar quarter.",
	      "5.3.2 MUST schedule and provide infrastructure for Board and CVE Working Group meetings.",
	      "5.3.3 MUST respond to inquiries by Roots and Sub-CNAs in a timely manner; establish metrics for such responsiveness."
	  ],
	  "subSubSections": []
	 }
     ]
    },
    {"sectionId": "section_6_top-level_roots",
     "sectionTitle": "Top-Level Roots",
     "sectionParagraphs": ["A Top-Level Root is at the top of a CNA hierarchy. It acts as the final arbiter for all disputes between CNAs and content-related decisions, develops the CNA Rules with approval from the CVE Board, recruits and onboards new CNAs, and ensures that all other CNAs are following CNA Rules."],
     "subSections": [
	 {"subSectionId": "section_6-1_top-level_root_rules",
	  "subSectionTitle": "Top-Level Root Rules",
	  "subSectionParagraphs": [
	      "6.1.1 MUST follow the rules of a Root as documented in <a href='#section_3_root'>Section 3: Roots</a>.",
	      "6.1.2 When necessary, the Top-Level Root SHOULD revise the CNA Rules.",
	      "6.1.3 MUST get the approval of the Board before implementing any revisions to the CNA Rules.",
	      "6.1.4 MUST inform the Secretariat when the CNA Rules are revised.",
	      "6.1.5 MUST decide on any issue escalated to it. There is no Root above it so there is no one to escalate the issue to past the Top-Level Root.",
	      "6.1.6 MUST serve as a member of the CVE Board."
	  ],
	  "subSubSections": []
	 }
     ]
    },
    {"sectionId": "section_7_assignment_rules",
     "sectionTitle": "Assignment Rules",
     "sectionParagraphs": [],
     "subSections": [
	 {"subSectionId": "section_7-1_what_is_a_vulnerability",
	  "subSectionTitle": "What Is a Vulnerability?",
	  "subSectionParagraphs": [
	      "The CVE Program does not adhere to a strict definition of a vulnerability. For the most part, CNAs are left to their own discretion to determine whether something is a vulnerability. Roots may provide additional guidance to their child CNAs. This allows the program to adapt to definitions used in different industries, legal regimes, and cultures.",
	      "7.1.1 If a product owner considers an issue to be a vulnerability in its product, then the issue MUST be considered a vulnerability, regardless of whether other parties (e.g., other vendors whose products share the affected code) agree.",
	      "7.1.2 If the CNA determines that an issue violates the security policy of a product, then the issue SHOULD be considered a vulnerability.",
	      "7.1.3 If a CNA receives a report about a new vulnerability that has a negative impact, then the reported vulnerability MAY be considered a vulnerability."
	  ],
	  "subSubSections": []
	 },
	 {"subSectionId": "section_7-2_how_many_vulnerabilities",
	  "subSectionTitle": "How Many Vulnerabilities?",
	  "subSectionParagraphs": [
	      "The CVE Program expects separate CVE IDs to be assigned to independently fixable vulnerabilities. If one vulnerability can be fixed without fixing the other, then the vulnerabilities should receive separate CVE IDs. The exception is when the vulnerabilities are independently fixable because they are in different products, but those products are affected because they share the same code, or the products are affected because they use the functionality of another product. “Product” in this case being a broad term that includes standards, application programming interfaces (APIs), and protocols.",
	      "7.2.1 CNAs MUST NOT assign the same CVE ID to more than one independently fixable vulnerability.",
	      "7.2.2 CNAs MUST NOT assign a CVE ID to a vulnerability that is dependent on another vulnerability. The dependent vulnerability should share the same CVE ID as the vulnerability it is dependent on. For example, if a buffer overflow occurs only when an integer overflow occurs, then the buffer overflow should share the same CVE ID as the integer overflow.",
	      "7.2.3 If a CNA is uncertain whether two issues are independently fixable, then the CNA SHOULD assign a single CVE ID.",
	      "7.2.4 If multiple products are affected by the same independently fixable vulnerability, then the CNA:<ol type='a'><li style='margin-left:2em'>MUST NOT assign more than one CVE ID if the products are affected, because they share the vulnerable code. The assigned CVE ID will be shared by the affected products.</li><li style='margin-left:2em'>MUST assign different CVE IDs if the products do not share affected code.</li><li style='margin-left:2em'>SHOULD assign different CVE IDs if the CNA is uncertain whether the products share code.</li></ol>",
	      "7.2.5 If a product is affected by a vulnerability because it uses the functionality or specification of another product, then a CNA:<ol type='a'><li style='margin-left:2em'>MUST assign a CVE ID to each known vulnerable implementation if there is a secure method of using the functionality or specification.</li><li style='margin-left:2em'>MUST assign a single CVE ID if there is no option to use the functionality or specification in a secure manner.</li><li style='margin-left:2em'>SHOULD assign different CVE IDs to each known vulnerable codebase if the CNA is uncertain whether there is a secure option.</li></ol>"
	  ],
	  "subSubSections": []
	 },
	{"subSectionId": "section_7-3_cna_scope",
	  "subSectionTitle": "CNA Scope",
	  "subSectionParagraphs": [
	      "CNAs are restricted to assigning CVE IDs to vulnerabilities within their scope. Sometimes, a CNA’s scope overlaps with another CNA’s. Examples include researcher CNAs who discover the same vulnerability at the same time and maintainer CNAs whose products are dependent on the same vulnerable library. In cases like these, CNAs are expected to negotiate between themselves to determine who should assign the CVE ID. If an agreement cannot be achieved, then the issue should be escalated to the appropriate Root.",
	      "7.3.1 CNAs MUST NOT assign CVE IDs to vulnerabilities outside of their scope.",
	      "7.3.2 CNAs SHOULD assign CVE IDs within their scope.",
	      "7.3.3 If a vulnerability falls within the scope of multiple CNAs, the conflict MUST be resolved using the process defined by their Root(s)."
	  ],
	  "subSubSections": []
	 },
	{"subSectionId": "section_7-4_requirements_for_assigning_a_cve_id",
	  "subSectionTitle": "Requirements for Assigning a CVE ID",
	  "subSectionParagraphs": [
	      "Not all vulnerabilities receive a CVE ID. CVE IDs are meant to help two or more parties communicate about a vulnerability. If assigning a CVE ID would not achieve this goal, then a CVE ID should not be assigned. The following rules are meant to ensure the goal is achieved.",
	      "7.4.1 CNAs MUST intend to make the vulnerabilities for which they assign CVE IDs public if they are not already.",
	      "7.4.2 CNAs MUST NOT assign CVE IDs to vulnerabilities they do not intend to make public.",
	      "7.4.3 CNAs MUST NOT assign a new CVE ID to a vulnerability that has already been assigned a CVE ID.",
	      "7.4.4 CNAs MAY assign a CVE ID to a vulnerability if:<ol type='a'><li style='margin-left:2em'>The product or service is owned by the CNA,</li><li style='margin-left:2em'>The product or service is not customer controlled, and</li><li style='margin-left:2em'>The vulnerability requires customer or peer action to resolve.</li></ol>",
	      "7.4.5 CNAs MUST NOT assign a CVE ID to a vulnerability if the affected product(s) or service(s):<ol type='a'><li style='margin-left:2em'>Are not owned by the CNA, and</li><li style='margin-left:2em'>Are not customer controlled.</li></ol>",
	      "7.4.6 CNAs MAY assign a CVE ID to a vulnerability if the affected product(s) or service(s):<ol type='a'><li style='margin-left:2em'>Are not owned by the CNA and</li><li style='margin-left:2em'>Are customer controlled.</li></ol> ",
	      "7.4.7 CNAs SHOULD NOT assign CVE IDs to vulnerabilities in products that are not publicly available or licensable.",
	      "7.4.8 CNAs SHOULD NOT consider factors other than those listed in these rules (e.g., whether the vulnerability affects end-of-life products) when deciding whether to assign a CVE ID. If they do, and the issue gets escalated to the CNA’s parent CNA, then the parent CNA SHOULD assign a CVE ID."
	  ],
	  "subSubSections": []
	}
     ]
    },
    {"sectionId": "section_8_cve_record_requirements",
     "sectionTitle": "CVE Record Requirements",
     "sectionParagraphs": ["The following sections include what information a CVE Record must contain when it is submitted by a CNA."],
     "subSections": [
	 {"subSectionId": "section_8-1_cve_record_information_requirements",
	  "subSectionTitle": "CVE Record Information Requirements",
	  "subSectionParagraphs": [
	      "This section defines the information required to be in a CVE Record. The CVE Record should contain enough information for users to understand to which vulnerability the CVE ID was assigned. The minimum required information is defined in this section. However, additional information can be provided and is encouraged.",
	      "8.1.1 MUST contain the name of an affected Product.",
	      "8.1.2 MUST contain the affected or fixed version(s).",
	      "8.1.3 MUST contain the CVE ID for the record.",
	      "8.1.4 MUST contain at least one of the following:<ol type='a'><li style='margin-left:2em'>Vulnerability Type</li><li style='margin-left:2em'>Root Cause</li><li style='margin-left:2em'>Impact</li></ol>",
	      "8.1.5 MUST contain at least one public reference. See <a href='#section_8-3_cve_record_reference_requirements'>Section 8.3 Reference Requirements</a> for complete requirements for the public reference.",
	      "8.1.6 MUST contain a prose description. See <a href='#section_8-2_cve_record_prose_description_requirements'>Section 8.2 Prose Description Requirements</a> for complete requirements for the prose description.",
	      "8.1.7 SHOULD indicate whether the CVE ID was assigned to a vulnerability affecting only products that are no longer supported."
	  ],
	  "subSubSections": []
	 },
	{"subSectionId": "section_8-2_cve_record_prose_description_requirements",
	  "subSectionTitle": "Prose Description Requirements",
	  "subSectionParagraphs": [
	      "This section defines the requirements for the prose description requirement defined in Section 8.1.6. While some of this information is included in CVE JSON fields, it is duplicated in the Description.",
	      "8.2.1 MUST provide enough information for a reader to have a reasonable understanding of what products are affected. If the affected products are not explicitly listed in the description, then the CNA MUST provide a reference that points to the known affected products.",
	      "8.2.2 SHOULD include the affected or fixed version(s).",
	      "8.2.3 MUST include one of the following:<ol type='a'><li style='margin-left:2em'>Vulnerability Type</li><li style='margin-left:2em'>Root Cause</li><li style='margin-left:2em'>Impact</li></ol>",
		  "8.2.4 MUST NOT credit people by name in the description. CNAs are free to credit or acknowledge discoverers within their own advisories.",
	      "8.2.5 MUST include an English description. MAY include descriptions in other languages, but at least one of them must be English.",
	      "8.2.6 MAY contain information not listed here.",
	      "8.2.7 MUST NOT contain information that is not germane to describing the vulnerability (e.g., foul language or advertising)."
	  ],
	  "subSubSections": []
	 },
	{"subSectionId": "section_8-3_cve_record_reference_requirements",
	  "subSectionTitle": "Reference Requirements",
	  "subSectionParagraphs": [
	      "This section defines the requirements for the public references.",
	      "8.3.1 MAY require registration or login, but MUST NOT have any other restrictions (e.g., be a paying customer).",
	      "8.3.2 SHOULD contain information about the vulnerability.",
	      "8.3.3 SHOULD use either the http, ftp, https, or ftps protocol.",
	      "8.3.4 MUST be accessible from the Internet.",
	      "8.3.5 The Terms of Use of the website MUST allow the CVE List to link to the URL.",
	      "8.3.6 MUST contain the minimum required information for a CVE Record (see <a href='#section_8-1_cve_record_information_requirements'>Section 8.1 CVE Record Information Requirements</a>). This information may be spread across multiple references."
	  ],
	  "subSubSections": []
	 },
	{"subSectionId": "section_8-4_cve_record_formatting",
	  "subSectionTitle": "Formatting",
	  "subSectionParagraphs": [
	      "8.4.1 CNAs MUST submit CVE Records in the format(s) approved by their Root.",
	      "8.4.2 CNAs are always permitted to submit CVE Records in the CVE minimum JSON specification."
	  ],
	  "subSubSections": []
	 }
     ]
    },
    {"sectionId": "section_9_appeals_process",
     "sectionTitle": "Appeals Process",
     "sectionParagraphs": ["Each Root can specify its own process for handling issues escalated to it. However, at a high level, the following process SHOULD be followed:<ol><li>The party seeking to appeal a decision made by a Root, or resolve a disagreement between Roots, contacts their hierarchy's Top-Level Root. For example, the MITRE Top-Level Root would be contacted at <a target='_blank' href='https://cveform.mitre.org/'>https://cveform.mitre.org/</a>, and the following steps would be followed:</li><ol type='a'><li style='margin-left:2em'>Enter your email address.</li><li style='margin-left:2em'>Select “Other” in the Select a request type field.</li><li style='margin-left:2em'>Select “Issue” in the Type of comment field.</li><li style='margin-left:2em'>Enter “Arbitration Request”, in the Please provide your question, issue, comment, etc. field.</li></ol><li>The Top-Level Root sets expectations for when a timely resolution may be available. Appeals of time-sensitive issues are prioritized, as determined by the Top-Level Root.</li><li>The Top-Level Root contacts the appropriate entities to collect information relevant to the issue. The CNAs involved in the dispute provide documentation per the rules established in this document. The Top-Level Root may also engage the Board for their consideration of the issue.</li><li>The Top-Level Root communicates its decision to all relevant parties once the disagreement or appeal has been fully considered. This result is final.</li></ol>"],
     "subSections": []
    },
    {"sectionId": "section_10_defining_cna_scope",
     "sectionTitle": "Defining a CNA’s Scope",
     "sectionParagraphs": ["Every CNA must provide a scope definition to indicate to what exactly they will assign CVE IDs. This scope should be published by the Secretariat and be made available on the CNA’s website (e.g., on their disclosure/security policy page). The scope should be a blanket statement (e.g., “All of Organization X’s components”), a list of specific components covered, a list of specific components not covered, or a mix of covered and not covered. This scope statement should also specify coverage for components that are not part of the CNA’s core business or purpose (for example, free tools).",
			   "A CNA should list in their scope whether they want to handle CVE assignments for end-of-life components according to the end-of-life rules or whether other CNAs should assume that responsibility if they have a need to reference such vulnerabilities. If a CNA specifies that it will not assign for end-of-life components, other CNAs may assign for those components.",
			   "CNA scope definitions for researchers and third-party coordinators may say “we will issue CVE IDs for components or projects that we are researching or coordinating unless they are otherwise covered by another CNA.”",
			   "For all CNAs, the published scope must be updated whenever a CNA’s scope changes. Scopes may change due to the introduction of new components (products, projects, etc.), mergers, sales, or acquisitions at an organizational level, or a change in process."
			  ],
     "subSections": []
    },
    {"sectionId": "section_11_cna_rules_updates",
     "sectionTitle": "CNA Rules Updates",
     "sectionParagraphs": [],
     "subSections": [
	 {"subSectionId": "section_11-1_rules_for_updating_the_cna_rules",
	  "subSectionTitle": "Rules for Updating the CNA Rules",
	  "subSectionParagraphs": [
	      "11.1.1 The Secretariat maintains the CNA Rules.",
	      "11.1.2 Any suggested change should be proposed to Secretariat.",
	      "11.1.3 Any changes to the CNA Rules must be approved by the CVE Board.",
	      "11.1.4 A Root may make additions to the CNA Rules. These additions would only apply to its child CNAs. For example, if there were a Root for Spanish companies, that Root may require its child CNAs submit records in both Spanish and English.",
	      "11.1.5 A Root MUST NOT make an addition to the CNA Rules that would contradict this document. For example, if there were a Root for Spanish companies, that Root may not require its child CNAs submit records in only Spanish, as this would violate <a href='#section_8-1_cve_record_information_requirements'>Section 8.1 CVE Record Information Requirements</a>.",
	      "11.1.6 A CNA can apply to the CVE Board for an exception to a rule.",
	      "11.1.7 The CVE Board may approve exceptions to the CNA Rules.",
	      "11.1.8 Roots cannot approve exceptions to the CNA Rules.",
	      "11.1.9 The Secretariat MUST document any exceptions approved by the CVE Board."
				  ],
	  "subSubSections": []
	 }
     ]
    }
    ],
    "appendices": [
    {"sectionId": "appendix_a_definitions",
     "sectionTitle": "Appendix A: Definitions",
     "sectionParagraphs": [
	 "These definitions give CNAs an understanding of terms that are used throughout the CVE Program. Whenever anyone within the CVE Program uses these terms in the context of CVE operations, CNAs should interpret the meanings of those terms based on these definitions.",
	 "A <strong>child CNA</strong> is any CNA within the hierarchy of a Root. Roots, Sub-CNAs, and CNA-LRs can be considered child CNAs.",
	 "The CNA hierarchy describes the relationship between Roots and the other CNAs that report to it. If a Root creates a new CNA, then the new CNA is within its hierarchy. CNA hierarchies are transitive. If Root B reports to Root A, then Root B is in Root A’s hierarchy. If a CNA reports to Root B, then that CNA is also in Root A’s hierarchy.",
	 "A <strong>CNA of Last Resort (CNA-LR)</strong> is an organization that is authorized to assign CVE IDs to vulnerabilities within a Root's scope so long as there is not a Sub-CNA in the Root's hierarchy responsible for the vulnerability or a CNA-LR lower in the Root's hierarchy responsible for the vulnerability.",
	 "A <strong>CVE Record</strong> is the descriptive data about the vulnerability included in the CVE List. The data includes, the CVE ID, product and version information, a prose description, and references. The full requirements for a CVE Record can be found in <a href='#section_8-1_cve_record_information_requirements'>Section 8.1. CVE Record Information Requirements</a>.",
	 "An <strong>end-of-life</strong> product is any product that is no longer supported by the owner or maintainer of the product.",
	 "A <strong>vulnerability</strong> is independently fixable when it can be fixed such that it does not fix any other reported vulnerabilities (i.e., is a separate code fix a possible approach to fix the vulnerability in question).",
	 "A <strong>parent CNA</strong> is the Root to which that CNA reports. All Roots also have a parent CNA, except for Top-Level Root, which is at the top of the CNA hierarchy.",
	 "A <strong>Top-Level Root</strong> manages Roots, trains and admits new Roots, and designates a CNA-LR as the assigner of last resort for requesters that are unable to have CVE IDs assigned at the Sub- or Root levels.",
	 "A product is <strong>publicly available</strong> when anyone can purchase or obtain legitimate access to it. This includes freeware, shareware, open source, and commercial products.",
	 "A vulnerability is <strong>publicly known</strong> when the issue has been published or divulged publicly (or is scheduled to be published by a researcher or vendor who has been in communication with a CNA regarding the issue).",
	 "A <strong>reference</strong> is the information about external sources where information about the vulnerability can be found. Requirements for a reference can be in <a href='#section_8-3_cve_record_reference_requirements'>Section 8.3 Reference Requirements</a>.",
	 "<strong>Roots</strong> manage a group of Sub-CNAs within a given domain or community, train and admit new Sub-CNAs, and may be the assigners of last resort within that domain or community. Roots may also manage other Roots and CNA-LRs.",
	 "The <strong>Scope</strong> of a given CNA is its products or domain of responsibility.",
	 "The <strong>Secretariat</strong> is the organization that performs the general secretary and administrative duties for the CVE Program, including maintaining the infrastructure, scheduling meetings, and publishing the CVE List.",
	 "A <strong>software version</strong> is a unique name for a particular revision of computer software. This includes commit IDs and other versioning identifiers. Within the CVE process, the specific version or versions affected by a vulnerability are key factors in the counting process.",
	 "<strong>Sub-CNAs</strong> assign CVE IDs for vulnerabilities in their scope and operate under the management of Roots.",
	 "A <strong>vulnerability</strong> in the context of the CVE Program is defined by <a href='#section_7_assignment_rules'>Section 7. Assignment Rules</a>. In general, a vulnerability is defined as a weakness in the computational logic (e.g., code) found in software and hardware components that, when exploited, results in a negative impact to confidentiality, integrity, OR availability. Mitigation of the vulnerabilities in this context typically involves coding changes but could also include specification changes or even specification deprecations (e.g., removal of affected protocols or functionality in their entirety).” NOTE: CNAs are not restricted to using this definition of a vulnerability."
     ],
     "subSections": [
	 {"subSectionId": "appendix_a-1_cve_states",
	  "subSectionTitle": "A.1 CVE States",
	  "subSectionParagraphs": [],
	  "subSubSections": [
	      {"subSubSectionId": "appendix_a-1-1-1_cve_states",
	       "subSubSectionTitle": "A.1.1 CVE ID States",
	       "subSubSectionParagraphs": ["<ul><li><strong>Allocated</strong> – When CVE IDs are first given to a CNA for later assignment to a vulnerability, they are in the allocated stated.</li><li><strong>Assigned</strong> – If a CVE ID has been associated with a vulnerability by a CNA, then the CVE ID is in the assigned state.</li><li><strong>Public</strong> – If the CVE ID is being used publicly to discuss a vulnerability, then it is in the public state. See <a href='#section_8-3_cve_record_reference_requirements'>Section 8.3 Reference Requirements</a> for the requirements for the CVE Program to consider a CVE ID public.</li><li><strong>Rejected</strong> – If the CVE ID should no longer be used, then it is in the rejected state.</li></ul>"]
	      },
	      {"subSubSectionId": "appendix_a-1-1-2_cve_states",
	       "subSubSectionTitle": "A.1.2 CVE Record States",
	       "subSubSectionParagraphs": ["<ul><li><strong>Reserved</strong> – When a CVE ID has been allocated to a CNA, it is immediately added to the CVE List in the reserved state. The reserved CVE Record is a placeholder until the information about the vulnerability is made public.</li><li><strong>Populated</strong> – When the information for the vulnerability is filled in the CVE List, the CVE Record is considered populated. Populated can also be used as a verb to describe the process of filling the vulnerability details into the CVE Record.</li><li><strong>Rejected</strong> – When the CVE ID and associated CVE Record should no longer be used, the CVE Record is in the rejected state. Rejected CVE Records remain in the CVE List so that users can know when it is invalid.</li><li><strong>Reserved but Public (RBP)</strong> – A term used to describe when the CVE ID is in the public state but the associated CVE Record is in the reserved state. This happens when a CNA has published its advisory for the vulnerability but has not populated the CVE Record.</li></ul>"]
	      }
	  ]
	 }
     ]
    },
    {"sectionId": "appendix_b_terms_of_use",
     "sectionTitle": "Appendix B: Terms of Use",
     "sectionParagraphs": ["See <a href='/Legal/TermsOfUse'>Terms of Use</a>."],
     "subSections": []
    },
    {"sectionId": "appendix_c_process_to_correct_assignment_issues_update_cve_records",
     "sectionTitle": "Appendix C: Process to Correct Assignment Issues or Update CVE Records",
     "sectionParagraphs": [
	 "There are many places where the CVE ID assignment process can break down. Common causes of incorrect assignments include:<ul><li>Insufficient information, e.g., the codebase relationships are not sufficiently researched.</li><li>Inadequate coordination, e.g., two CNAs assign separate CVE IDs without talking to each other.</li><li>Human error, e.g., a typo in a report.</li></ul>",
	 "Since mistakes are inevitable, processes to correct them are necessary. The following sections describe different scenarios wherein the CVE ID assignment goes awry, and the corresponding resolution process.",
	 "In general, a CVE Record may be updated in order to:<ul><li>Add or update a reference;</li><li>Update a description;</li><li>Resolve the existence of a duplicate record; or</li><li>Reject a record.</li></ul>",
	 "These updates may be initiated by:<ul><li>The CNA that assigned the CVE ID;</li><li>A third-party with information not currently included in the CVE Record; or</li><li>Root or the Top-Level Root resolving an issue with the CVE Record.</li></ul>",
	 "As part of a CNA’s vulnerability management process, a CNA can choose whether they wish to vet any updates to CVE IDs that they assigned. The process for communicating those changes between CNAs and requesters will vary depending on the CNA. It is not a requirement that CNAs must vet changes to their CVE Records."
     ],
     "subSections": [
	 {"subSectionId": "appendix_c-1_dispute",
	  "subSectionTitle": "C1. Dispute: CNA Rules Violations",
	  "subSectionParagraphs":[
	      "In the event that a CVE Record is published in violation of other CNA Rules, as reported to that CNA’s Root or the Top-Level Root, the offending CNA's Root shall perform one of the following actions: <ol><li>In the case the CVE Record was published by an out-of-scope CNA, the offending CNA’s Root shall invite the in-scope CNA to review and edit the CVE Record as appropriate. If at all possible, the originally published CVE ID should be preserved. If this results in a duplicate, split, or merged CVE Record, the rules on handling those conditions listed below shall apply.</li><li>In the case where the CVE Record was published with errors due to CNA rules violations (other than being out-of-scope), the offending CNA shall update the CVE Record accordingly to resolve those errors. If the issuing CNA refuses to do so, the offending CNA’s Root shall review and edit the CVE Record as needed.</li><li>In the case where no CVE Record was published because the in-scope CNA refuses to do so, the offending CNA’s Root shall be contacted to publish a CVE Record. In many cases, this will lead to a disputed CVE Record, which shall be handled according to the rules regarding disputing a CVE Record, as noted below.</li></ol>",
	      "In all cases, repeated rules violations by CNAs can lead to the revocation of CNA status by the offending CNA’s Root."
	  ],
	  "subSubSections":[]
	 },
	 {"subSectionId": "appendix_c-2_reject",
	  "subSectionTitle": "C2. Reject: A CVE ID Should Not Have Been Assigned",
	  "subSectionParagraphs": ["There are many reasons why a CVE ID may be rejected, such as: further research determines the issue is not a vulnerability; a typo in an advisory causes the wrong CVE ID to be used; or the researcher decides to keep the vulnerability private. In these and other instances, the description for the CVE Record is updated to reflect that the CVE ID has been REJECTED and the reason for the rejection is provided."],
	  "subSubSections": []
	 },
	 {"subSectionId": "appendix_c-3_merge",
	  "subSectionTitle": "C3. Merge: Multiple CVE IDs Assigned to One Vulnerability",
	  "subSectionParagraphs": [
	      "The process for resolving multiple CVE IDs assigned to a single vulnerability (as defined by the counting decisions) is as follows:<ol><li>Determine which CVE ID to associate with the issue.</li><li>Merge the information from the other CVE IDs into chosen CVE ID.</li><li>Update the CVE IDs that were not chosen with a REJECTED description that points to the chosen CVE ID as the correct one to use.</li></ol>",
	      "The following criteria is used to select which identifier will be associated with the issue:<ol><li>PREFER THE MOST COMMONLY REFERENCED IDENTIFIER. This is roughly gauged by searching for all affected identifiers on a search engine and comparing results.</li><li>If the usage numbers of identifiers are about the same, then CHOOSE THE IDENTIFIER USED BY THE MOST AUTHORITATIVE SOURCE. The &quot;most authoritative source&quot; is roughly prioritized as: vendor, coordinator, researcher.</li><li>If the identifiers have the same level of authority, then CHOOSE THE IDENTIFIER THAT HAS BEEN PUBLIC FOR THE LONGEST PERIOD OF TIME.<li>If the identifiers have been public for the same amount of time, then CHOOSE THE IDENTIFIER WITH THE SMALLEST NUMERIC PORTION.</li><li>Note that the process described above is reserved for cases where the CVE IDs have clearly been assigned to the same vulnerability. If there is insufficient information to decide, the description of the CVE Records may be changed to indicate that they may be the same. For example, a NOTE sentence such as &quot;This may be the same as <the-other-CVE-ID>&quot; or &quot;This may overlap <the-other-CVE-ID>&quot; may be used.</li></ol>"
	  ],
	  "subSubSections": []
	 },
	 {"subSectionId": "appendix_c-4_split",
	  "subSectionTitle": "C4. Split: A Single CVE ID is Assigned when More than One is Required",
	  "subSectionParagraphs": [
	      "The process for splitting a CVE Record into multiple CVE Records is as follows:<ol><li>Determine which vulnerability should be associated with the original CVE ID.</li><li>Assign CVE IDs to the additional vulnerabilities.</li><li>Include a NOTE pointing to the original CVE ID in the descriptions of the CVE Records for the new CVE IDs.</li><li>Update description of the CVE Record for the original CVE ID with a NOTE saying that the record has been split and point to the additional CVE IDs.</li></ol>",
	      "The following criteria is used to select which vulnerability is selected to be associated with the original CVE Record.<ol><li>PREFER THE MOST COMMONLY ASSOCIATED VULNERABILITY. This is roughly gauged by searching for all of the vulnerabilities on a search engine and comparing results. </li><li>If the association number of the vulnerabilities are about the same, then CHOOSE THE VULNERABILITY WITH THE MOST SEVERE RISK. The risk for a vulnerability is determined by the CVSS score.</li><li>If the risks are roughly the same, CHOOSE THE VULNERABILITY WITH BROADEST RANGE OF AFFECTED VERSIONS.</li><li>If the vulnerabilities affect the same versions, CHOOSE THE VULNERABILITY THAT WAS DESCRIBED FIRST IN INITIAL PUBLICATION.</li></ol>"
	  ],
	  "subSubSections": []
	 },
	 {"subSectionId": "appendix_c-5_dispute",
	  "subSectionTitle": "C5. Dispute: Validity of the Vulnerability is Questioned",
	  "subSectionParagraphs": [
	      "Not everyone shares the same definition of a vulnerability. One person’s vulnerability is another person’s security hardening opportunity, and another person’s intended functionality. The CVE Program deals with these differing opinions as follows:",
	      "When an authoritative source disputes the validity of the vulnerability, “** <a href='#appendix_c-1_dispute'>DISPUTED</a> **” is added to the beginning of the description, and a short NOTE is added to the end explaining why the vulnerability is disputed. Ideally, the disputing party provides a link that can be added to the CVE Record as a reference, and a quote that can be used as the explanation in the NOTE. However, neither are required.",
	      "Note that marking a CVE Record as disputed is different from rejecting a CVE Record. Rejections are made because the issue is clearly not a vulnerability (it fails <a href='#section_7-1_what_is_a_vulnerability'>Section 7.1: What Is a Vulnerability?</a>), or does not meet one of the other requirements for assignment in <a href='#section_7-4_requirements_for_assigning_a_cve_id'>Section 7.4: Requirements for Assigning a CVE ID</a>. Records are disputed when there are differing opinions about it being a vulnerability or regarding the specific details of the vulnerability itself. The more binary cases of <a href='#section_7-4_requirements_for_assigning_a_cve_id'>Section 7.4: Requirements for Assigning a CVE ID</a> are not things that can be disputed, per se. They either are true, or are not true."
	  ],
	  "subSubSections": []
	 }
     ]
    },
    {"sectionId": "appendix_d_disclosure_and_embargo_policies",
     "sectionTitle": "Appendix D: Disclosure and Embargo Policies",
     "sectionParagraphs": [
	 "The CVE Program is not designed to provide or support the non-public aspects of coordinated vulnerability disclosure, and does not require specific disclosure or embargo practices. CNAs are required to provide a disclosure policy to the Secretariat (see <a href='#section_2-3_cna_record_management_rules'>Section 2.3.3</a>).  A disclosure and embargo policy should include the following information:<ol><li>What process a third-party should expect when reporting a vulnerability to the CNA, including when the CNA will assign a CVE ID and when and how they will publish the CVE ID. Also, what expectations there are for the vulnerability reporter as far as their role in the disclosure process.<li>Communication guidelines and timelines, such as when a reporter should expect a response and what information the CNA is willing to discuss publicly. Just as important, the methods for contacting the CNA should be clearly described.<li>Guidelines describing what they consider to be vulnerabilities in their products.<li>If they are involved in a Bug Bounty program, how the rules of the Bug Bounty program affect their CVE assignment process. </li></ol>",
	 "Below are some examples of disclosure policies that can be used as a template for the development of a policy to be used by a CNA:<ul><li><a target='_blank' href='https://www.us-cert.gov/vulnerability-disclosure-policy'>DHS CISA Vulnerability Disclosure Policy</a></li><li><a target='_blank' href='https://vuls.cert.org/confluence/display/Wiki/Vulnerability+Disclosure+Policy'>CERT Coordination Center Vulnerability Disclosure Policy</a></li><li><a target='_blank' href='https://www.enisa.europa.eu/publications/vulnerability-disclosure/at_download/fullReport'>ENISA Good Practice Guide on Vulnerability Disclosure</a></li><li><a target='_blank' href='https://www.iso.org/standard/72311.html'>ISO/IEC 29147 Vulnerability Disclosure</a></li><li><a target='_blank' href='https://www.ntia.doc.gov/files/ntia/publications/ntia_vuln_disclosure_early_stage_template.pdf'>NTIA “Early Stage” Coordinated Vulnerability Disclosure Template</a></li><li><a target='_blank' href='https://github.com/bugcrowd/disclosure-policy'>Open Source Responsible Disclosure Framework</a></li><li><a target='_blank' href='https://www.hackerone.com/disclosure-guidelines'>Bug Bounty - HackerOne Disclosure Policy</a></li><li><a target='_blank' href='https://www.rapid7.com/security/disclosure/'>Researcher - Rapid7 Disclosure Policy</a></li></ul>"
     ],
     "subSections": []
    }
    ]
}
